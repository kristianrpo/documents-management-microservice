apiVersion: v1
kind: Service
metadata:
  name: dynamodb-local
  namespace: documents
spec:
  selector:
    app: dynamodb-local
  ports:
    - port: 8000
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dynamodb-local
  namespace: documents
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dynamodb-local
  template:
    metadata:
      labels:
        app: dynamodb-local
    spec:
      containers:
        - name: dynamodb-local
          image: amazon/dynamodb-local:latest
          args: ["-jar","DynamoDBLocal.jar","-inMemory","-sharedDb"]
          ports:
            - containerPort: 8000
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
            limits:
              cpu: 200m
              memory: 512Mi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: dynamodb-init
  namespace: documents
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: aws-cli
          image: amazon/aws-cli:latest
          env:
            - name: AWS_ACCESS_KEY_ID
              value: admin
            - name: AWS_SECRET_ACCESS_KEY
              value: admin123
            - name: AWS_DEFAULT_REGION
              value: us-east-1
          command: ["/bin/sh","-c"]
          args:
            - |
              echo "Waiting for DynamoDB to be ready...";
              for i in $(seq 1 30); do
                if aws dynamodb list-tables --endpoint-url http://dynamodb-local:8000 >/dev/null 2>&1; then
                  break; fi; echo "."; sleep 2; done;
              echo "Creating Documents table...";
              aws dynamodb create-table \
                --table-name Documents \
                --attribute-definitions \
                  AttributeName=DocumentID,AttributeType=S \
                  AttributeName=OwnerID,AttributeType=N \
                  AttributeName=HashSHA256,AttributeType=S \
                --key-schema \
                  AttributeName=DocumentID,KeyType=HASH \
                  AttributeName=OwnerID,KeyType=RANGE \
                --provisioned-throughput \
                  ReadCapacityUnits=5,WriteCapacityUnits=5 \
                --global-secondary-indexes \
                  '[{"IndexName":"OwnerIDIndex","KeySchema":[{"AttributeName":"OwnerID","KeyType":"HASH"}],"Projection":{"ProjectionType":"ALL"},"ProvisionedThroughput":{"ReadCapacityUnits":5,"WriteCapacityUnits":5}},{"IndexName":"HashOwnerIndex","KeySchema":[{"AttributeName":"HashSHA256","KeyType":"HASH"},{"AttributeName":"OwnerID","KeyType":"RANGE"}],"Projection":{"ProjectionType":"ALL"},"ProvisionedThroughput":{"ReadCapacityUnits":5,"WriteCapacityUnits":5}}]' \
                --endpoint-url http://dynamodb-local:8000 \
                --region us-east-1 || echo "Table already exists";
