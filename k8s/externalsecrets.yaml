apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: aws-secrets
spec:
  provider:
    aws:
      service: SecretsManager
      region: __AWS_REGION__
      auth:
        jwt:
          serviceAccountRef:
            name: external-secrets
            namespace: external-secrets
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: documents-secrets
  namespace: documents
spec:
  refreshInterval: 5m
  secretStoreRef:
    name: aws-secrets
    kind: ClusterSecretStore
  target:
    name: documents-secrets
    creationPolicy: Owner
  data:
    - secretKey: APP_PORT
      remoteRef:
        key: __AWS_SECRET_NAME__
        property: APP_PORT
    - secretKey: DYNAMODB_TABLE
      remoteRef:
        key: __AWS_SECRET_NAME__
        property: DYNAMODB_TABLE
    - secretKey: DYNAMODB_ENDPOINT
      remoteRef:
        key: __AWS_SECRET_NAME__
        property: DYNAMODB_ENDPOINT
    - secretKey: AWS_REGION
      remoteRef:
        key: __AWS_SECRET_NAME__
        property: AWS_REGION
    - secretKey: S3_BUCKET
      remoteRef:
        key: __AWS_SECRET_NAME__
        property: S3_BUCKET
    - secretKey: S3_ENDPOINT
      remoteRef:
        key: __AWS_SECRET_NAME__
        property: S3_ENDPOINT
    - secretKey: S3_USE_PATH_STYLE
      remoteRef:
        key: __AWS_SECRET_NAME__
        property: S3_USE_PATH_STYLE
    - secretKey: S3_PUBLIC_BASE_URL
      remoteRef:
        key: __AWS_SECRET_NAME__
        property: S3_PUBLIC_BASE_URL
    - secretKey: RABBITMQ_URL
      remoteRef:
        key: __AWS_SECRET_NAME__
        property: RABBITMQ_URL
    - secretKey: RABBITMQ_CONSUMER_QUEUE
      remoteRef:
        key: __AWS_SECRET_NAME__
        property: RABBITMQ_CONSUMER_QUEUE
    - secretKey: RABBITMQ_AUTH_REQUEST_QUEUE
      remoteRef:
        key: __AWS_SECRET_NAME__
        property: RABBITMQ_AUTH_REQUEST_QUEUE
    - secretKey: RABBITMQ_AUTH_RESULT_QUEUE
      remoteRef:
        key: __AWS_SECRET_NAME__
        property: RABBITMQ_AUTH_RESULT_QUEUE
