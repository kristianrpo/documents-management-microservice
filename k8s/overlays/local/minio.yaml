apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: documents
  labels: { app: minio }
spec:
  replicas: 1
  selector:
    matchLabels: { app: minio }
  template:
    metadata:
      labels: { app: minio }
    spec:
      containers:
        - name: minio
          image: minio/minio:latest
          args: ["server", "/data", "--console-address", ":9001"]
          env:
            - name: MINIO_ROOT_USER
              value: "minioadmin"
            - name: MINIO_ROOT_PASSWORD
              value: "minioadmin"
          ports:
            - containerPort: 9000  # S3 API
            - containerPort: 9001  # Console UI
          readinessProbe:
            httpGet: { path: /minio/health/ready, port: 9000 }
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet: { path: /minio/health/live, port: 9000 }
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          emptyDir: {}   # sin persistencia para local

---
# Service para S3 API
apiVersion: v1
kind: Service
metadata:
  name: minio-api
  namespace: documents
  labels: { app: minio }
spec:
  type: ClusterIP
  selector: { app: minio }
  ports:
    - name: s3
      port: 9000
      targetPort: 9000

---
# Service para la consola web
apiVersion: v1
kind: Service
metadata:
  name: minio-console
  namespace: documents
  labels: { app: minio }
spec:
  type: ClusterIP
  selector: { app: minio }
  ports:
    - name: ui
      port: 9001
      targetPort: 9001

---
# Job para crear el bucket "documents"
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-make-bucket
  namespace: documents
spec:
  backoffLimit: 3
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: mc
          image: minio/mc:latest
          env:
            - name: MC_HOST_local
              value: "http://minioadmin:minioadmin@minio-api.documents.svc.cluster.local:9000"
          command: ["sh","-lc"]
          args:
            - |
              set -e
              echo "Creando bucket 'documents' en MinIO..."
              mc mb -p local/documents || true
              mc anonymous set download local/documents || true
